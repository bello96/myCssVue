// 1.定义主题颜色 themes.css  
@import "./themes.scss";

// 2.定义混合指令, 切换主题,并将主题中的所有规则添加到theme-map中
@mixin themify($themes: $themes) {
  @each $theme-name, $map in $themes {
    // & 表示父级元素  !global 表示覆盖原来的
    .theme-#{$theme-name} & {
      $theme-map: () !global;
      // 循环合并键值对
      @each $key, $value in $map {
         $theme-map: map-merge($theme-map,($key: $value)) !global;
      }
      // 表示包含 下面函数 themed()
      @content;
      $theme-map: null !global;
    }
  }
}

// 3. 通过key获取map中的值
@function themed($key) {
  @return map-get($theme-map, $key);
}


// 字号大小
@mixin fontsfy($fontsizes:$fontsizes) {
  @each $font-name, $map in $fontsizes {
    .font-#{$font-name} & {
      $font-map: () !global;
      @each $key, $value in $map {
        $font-map: map-merge($font-map,($key: $value)) !global;
     }
     // 表示包含 下面函数 fontd()
     @content;
     $font-map: null !global;
    }
  }
}

@function fontd($key) {
  @return map-get($font-map, $key);
}